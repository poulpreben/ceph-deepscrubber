#!/bin/bash
#
# this is a deep scrub automation thing

SCRIPTPATH="$(dirname "$(readlink -f "$0")")"
source "$SCRIPTPATH/config"

if [ "$1" = "debug" ]; then
  debug=1
else
  debug=0
fi

logfile='/opt/deepscrubber/log'

function syslog {
  logger -t "ceph-deepscrubber" "$1"
}

function log {
  if [ "$debug" = "1" ] && [ "$2" = "1" ]; then
    msg="[debug] $1"
  else
    msg="[info] $1"
  fi

  if [ "$logtype" = "syslog" ]; then
    syslog "$msg"
    return
  fi

  now=$(date +'[%F %H:%M:%S]')

  if [ "$2" = "1" ]; then
    if [ "$debug" = "1" ]; then
      echo "$now deepscrubber: $msg" | tee -a $logfile
    fi
  else
    echo "$now deepscrubber: $msg" | tee -a $logfile
  fi
}

# iterate over pools and queue
for pool in "${pools[@]}"; do
  poolName=$(echo "$pool" | cut -d',' -f1)

  now=$(date +"%H")
  # determine how we're looking at night time
  if (( $now > ${nighttime[0]} )) || (( $now < ${nighttime[1]} )); then
    maxScrubs=$(echo "$pool" | cut -d',' -f2)
    log "[ day ] max scrubs for $poolName: $maxScrubs" 1
  else
    maxScrubs=$(echo "$pool" | cut -d',' -f3)
    log "[night] max scrubs for $poolName: $maxScrubs" 1
  fi

  log "Inspecting pool $poolName" 1
  log "Pool $poolName max scrubs $maxScrubs" 1

  # save pgs to temp file
  ceph pg ls-by-pool $poolName active > /tmp/.$$.pgs.$poolName

  runningScrubs=$(grep scrubbing /tmp/.$$.pgs.$poolName -c)

  # running scrubs is larger or equal to maxScrubs
  if ! (( $runningScrubs < $maxScrubs )); then
    log "Cannot queue deep scrub for pool $poolName; Running scrubs ! < max scrubs ($runningScrubs, $maxScrubs)" 1
    rm -f /tmp/.$$.pgs.$poolName
    continue
  fi

  # how many deep scrubs can we queue?
  limit=$(($maxScrubs - $runningScrubs))

  # run $limit amount of scrubs
  while read pg; do
    log "Starting deep scrub of pg $pg in pool $poolName"
    ceph pg deep-scrub $pg >/dev/null 2>&1
  done < <(grep active /tmp/.$$.pgs.$poolName | grep -v scrubbing | awk {'print $17, $1'} | sort -k1 | head -n $limit | awk {'print $2'})
  rm -f /tmp/.$$.pgs.$poolName
done
